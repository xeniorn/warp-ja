<UserControl x:Class="Warp.SingleSliceRenderer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:s="clr-namespace:Sparta"
             xmlns:local="clr-namespace:Warp"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             MouseEnter="SingleSliceRenderer_OnMouseEnter"
             MouseLeave="SingleSliceRenderer_OnMouseLeave"
             Background="Transparent">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition />
        </Grid.RowDefinitions>

        <Image Grid.Column="0" Grid.Row="0" Name="ImageViewerXY" Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Top" MouseDown="ImageViewerXY_MouseDown" MouseMove="ImageViewerXY_MouseMove" MouseWheel="ImageViewerXY_MouseWheel" />

        <Image Grid.Column="0" Grid.Row="0" Name="OverlayViewerXY" Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Top" />

        <Canvas Grid.Column="0" Grid.Row="0" Name="CanvasXY" HorizontalAlignment="Left" VerticalAlignment="Top">
            <Ellipse x:Name="PointerXY" Width="8" Height="8" Stroke="Black" StrokeThickness="2" Fill="White" IsHitTestVisible="False" />
        </Canvas>

        <Popup Name="PopupControls" Placement="Right" PlacementTarget="{Binding ElementName=ImageDisplay}" PopupAnimation="Fade" AllowsTransparency="True" HorizontalOffset="-1" MouseLeave="SingleSliceRenderer_OnMouseLeave">
            <Border BorderThickness="1" BorderBrush="DarkGray" Background="White">
                <Grid Margin="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="24" />
                        <RowDefinition Height="24" />
                        <RowDefinition Height="24" />
                        <RowDefinition Height="24" />
                        <RowDefinition Height="24" />
                        <RowDefinition Height="24" />
                        <RowDefinition Height="24" />
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Column="0" Grid.Row="0" Text="Presets:" />
                    <TextBlock Grid.Column="0" Grid.Row="1" Text="Angles:" />
                    <TextBlock Grid.Column="0" Grid.Row="2" Text="Position:" />
                    <TextBlock Grid.Column="0" Grid.Row="3" Text="Rotated:" />

                    <TextBlock Grid.Column="0" Grid.Row="4" Text="Black:"/>
                    <TextBlock Grid.Column="0" Grid.Row="5" Text="White:"/>

                    <StackPanel Grid.Column="2" Grid.Row="0" Orientation="Horizontal" VerticalAlignment="Top">
                        <Button Name="PresetXY" Content="XY" Click="PresetXY_Click" />
                        <Button Name="PresetXZ" Content="XZ" Margin="10,0,0,0" Click="PresetXZ_Click" />
                        <Button Name="PresetZY" Content="ZY" Margin="10,0,0,0" Click="PresetZY_Click" />
                    </StackPanel>

                    <StackPanel Grid.Column="2" Grid.Row="1" Orientation="Horizontal">
                        <s:ValueSlider Grid.Column="2" Grid.Row="0" x:Name="SliderAngleRot" Value="{Binding AngleRot, Mode=TwoWay}" UpdateTrigger="PropertyChanged" TextFormat="{}{0}, " MinValue="-99999" MaxValue="99999" StepSize="1" HorizontalAlignment="Left" />
                        <s:ValueSlider Grid.Column="2" Grid.Row="1" x:Name="SliderAngleTilt" Value="{Binding AngleTilt, Mode=TwoWay}" UpdateTrigger="PropertyChanged" TextFormat="{}{0}, " MinValue="-99999" MaxValue="99999" StepSize="1" HorizontalAlignment="Left" />
                        <s:ValueSlider Grid.Column="2" Grid.Row="2" x:Name="SliderAnglePsi" Value="{Binding AnglePsi, Mode=TwoWay}" UpdateTrigger="PropertyChanged" TextFormat="{}{0}" MinValue="-99999" MaxValue="99999" StepSize="1" HorizontalAlignment="Left" />
                    </StackPanel>

                    <StackPanel Grid.Column="2" Grid.Row="2" Orientation="Horizontal">
                        <s:ValueSlider x:Name="SliderPositionX" Value="{Binding PositionX, Mode=TwoWay}" UpdateTrigger="PropertyChanged" TextFormat="{}{0}, " MinValue="0" MaxValue="999999" StepSize="1" HorizontalAlignment="Left" />
                        <s:ValueSlider x:Name="SliderPositionY" Value="{Binding PositionY, Mode=TwoWay}" UpdateTrigger="PropertyChanged" TextFormat="{}{0}, " MinValue="0" MaxValue="999999" StepSize="1" HorizontalAlignment="Left" />
                        <s:ValueSlider x:Name="SliderPositionZ" Value="{Binding PositionZ, Mode=TwoWay}" UpdateTrigger="PropertyChanged" TextFormat="{}{0}" MinValue="0" MaxValue="999999" StepSize="1" HorizontalAlignment="Left" />
                    </StackPanel>

                    <StackPanel Grid.Column="2" Grid.Row="3" Orientation="Horizontal">
                        <s:FormattedTextBlock Value="{Binding RotatedX}" TextFormat="{}{0:F1}, " />
                        <s:FormattedTextBlock Value="{Binding RotatedY}" TextFormat="{}{0:F1}, " />
                        <s:FormattedTextBlock Value="{Binding RotatedZ}" TextFormat="{}{0:F1}" />
                    </StackPanel>

                    <s:ValueSlider Grid.Column="2" Grid.Row="4" Value="{Binding ThresholdLower, Mode=TwoWay}" UpdateTrigger="PropertyChanged" TextFormat="{}{0}" MinValue="-999999" MaxValue="999999" StepSize="0.001" />
                    <s:ValueSlider Grid.Column="2" Grid.Row="5" Value="{Binding ThresholdUpper, Mode=TwoWay}" UpdateTrigger="PropertyChanged" TextFormat="{}{0}" MinValue="-999999" MaxValue="999999" StepSize="0.001" />

                    <CheckBox Grid.ColumnSpan="3" Grid.Row="6" IsChecked="{Binding PointerShow}" Content="Show pointer" />
                </Grid>
            </Border>
        </Popup>
    </Grid>
</UserControl>