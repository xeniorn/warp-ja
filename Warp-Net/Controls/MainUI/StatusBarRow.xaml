<UserControl x:Class="Warp.Controls.StatusBarRow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Warp.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             MinHeight="15">
    <UserControl.Resources>
        <ResourceDictionary>
            <local:InverseBooleanConverter x:Key="inverseBooleanConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Name="MainGrid" Background="Transparent" MouseLeftButtonUp="MainGrid_OnMouseLeftButtonUp" MouseMove="PanelSegments_OnMouseMove" MouseLeave="PanelSegments_OnMouseLeave">
        <Grid.RowDefinitions>
            <RowDefinition Height="12" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Popup Name="PopupThumbnail" Placement="Top" AllowsTransparency="True">
            <StackPanel Orientation="Horizontal" Margin="12">
                <StackPanel.Effect>
                    <DropShadowEffect BlurRadius="12" ShadowDepth="0" Opacity="1" Color="Black" />
                </StackPanel.Effect>

                <Image Name="ImageThumbnail" Margin="0,0,10,0" />

                <StackPanel Orientation="Vertical">
                    <TextBlock Name="IndicatorCTF" Text="CTF" FontSize="18" FontWeight="Bold" />
                    <TextBlock Name="IndicatorMotion" Text="Motion" FontSize="18" FontWeight="Bold" />
                    <TextBlock Name="IndicatorPicking" Text="Picking" FontSize="18" FontWeight="Bold" />
                    <TextBlock Name="IndicatorExport" Text="Export" FontSize="18" FontWeight="Bold" />
                </StackPanel>
            </StackPanel>
        </Popup>
        <Canvas Grid.Row="0" Name="PanelSegments" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="False" IsHitTestVisible="True" />
        <Canvas Grid.Row="0" Name="PanelSegmentHighlight" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True" IsHitTestVisible="False" />
        <Path Grid.Row="1" Name="PathPosition" HorizontalAlignment="Left" VerticalAlignment="Top" Width="8" Height="4" Stretch="Fill" IsHitTestVisible="False" Visibility="Collapsed" Fill="{DynamicResource BlackBrush}" Data="F1 M 27.1669,36.3317L 29.7664,33.3319L 24.5674,33.3319L 27.1669,36.3317 Z "/>
        <Path Grid.Row="0" Name="PathPositionInverted" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="8" Height="4" Stretch="Fill" IsHitTestVisible="False" Visibility="Collapsed" Fill="{DynamicResource BlackBrush}" Data="F1 M 27.1669,36.3317L 29.7664,33.3319L 24.5674,33.3319L 27.1669,36.3317 Z "/>
        <Path Grid.Row="1" Name="PathHighlightPosition" HorizontalAlignment="Left" VerticalAlignment="Top" Width="8" Height="4" Stretch="Fill" IsHitTestVisible="False" Visibility="Collapsed" Fill="{DynamicResource BlackBrush}" Data="F1 M 27.1669,36.3317L 29.7664,33.3319L 24.5674,33.3319L 27.1669,36.3317 Z "/>
        <CheckBox Grid.Row="1" 
                  Name="CheckCurrentName" 
                  IsChecked="{Binding ActiveItem.UnselectManual, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource inverseBooleanConverter}, Mode=TwoWay}" 
                  IsThreeState="True"
                  ToolTip="{Binding ActiveItem.Path, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                  HorizontalAlignment="Left" 
                  VerticalAlignment="Top"
                  Visibility="Collapsed"
                  Background="Transparent"
                  Click="CheckCurrentName_OnClick">
            <CheckBox.Effect>
                <BlurEffect x:Name="BlurCurrentName" RenderingBias="Quality" KernelType="Gaussian" Radius="0" />
            </CheckBox.Effect>
            <TextBlock Name="TextCurrentName">
                <TextBlock.TextDecorations>
                    <TextDecoration Location="Underline" PenOffset="4">
                        <TextDecoration.Pen>
                            <Pen x:Name="PenCurrentName" Thickness="6" />
                        </TextDecoration.Pen>
                    </TextDecoration>
                </TextBlock.TextDecorations>
            </TextBlock>
        </CheckBox>
        <CheckBox Grid.Row="1" 
                  Name="CheckHighlightCurrentName" 
                  IsThreeState="True"
                  HorizontalAlignment="Left" 
                  VerticalAlignment="Top"
                  Visibility="Collapsed"
                  IsHitTestVisible="False">
            <TextBlock Name="TextHighlightCurrentName">
                <TextBlock.TextDecorations>
                    <TextDecoration Location="Underline" PenOffset="4">
                        <TextDecoration.Pen>
                            <Pen x:Name="PenHighlightCurrentName" Thickness="6" />
                        </TextDecoration.Pen>
                    </TextDecoration>
                </TextBlock.TextDecorations>
            </TextBlock>
        </CheckBox>
    </Grid>
</UserControl>
